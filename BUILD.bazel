load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_docker//docker/package_managers:download_pkgs.bzl", "download_pkgs")
load("@io_bazel_rules_docker//docker/package_managers:install_pkgs.bzl", "install_pkgs")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit", "container_run_and_extract")

#
# Image with SteamCMD
#

container_run_and_commit(
    name = "debian_with_i386_run",
    commands = [
        "dpkg --add-architecture i386",
    ],
    image = "@debian//image",
)

container_image(
    name = "debian_with_i386",
    base = ":debian_with_i386_run_commit.tar",
    visibility = ["//visibility:public"],
)

container_run_and_commit(
    name = "prepare_steamcmd_repo",
    commands = [
        "sed -i -e's/ main/ main non-free/g' /etc/apt/sources.list",
        "echo steam steam/question select 'I AGREE' | debconf-set-selections",
        "echo steam steam/license note '' | debconf-set-selections",
    ],
    image = ":debian_with_i386.tar",
)

download_pkgs(
    name = "steamcmd_deps",
    image_tar = ":prepare_steamcmd_repo_commit.tar",
    packages = [
        "ca-certificates",
        "steamcmd:i386",
    ],
)

install_pkgs(
    name = "steamcmd_base",
    image_tar = ":prepare_steamcmd_repo_commit.tar",
    installables_tar = ":steamcmd_deps.tar",
    installation_cleanup_commands = "rm -rf /var/lib/apt/lists/*",
    output_image_name = "steamcmd_base",
)

container_image(
    name = "steamcmd",
    base = ":steamcmd_base.tar",
    visibility = ["//visibility:public"],
)
